= Perlと全文検索エンジンGroongaでMySQLの\nデータを高速に全文検索する

# : subtitle
#    サブタイトル
: author
   堀本 泰弘
: institution
   株式会社クリアコード
: content-source
   YAPC::Kyoto 2023
: date
   2023-03-19
: allotted-time
   35m
: start-time
   2023-03-19T10:00+09:00
: end-time
   2023-03-19T10:35+09:00
: theme
   .


= 自己紹介

  # image
  # src = images/self-introduction.png
  # relative_height = 107

= 今日のテーマ

MySQLのデータを高速に全文検索する！

= 目次

  * 全文検索とは？
  * Groongaとは？
  * Groongaを使ってMySQLのデータを検索できると何が嬉しいの？
  * どうやってMySQLのデータを全文検索するの？

= 目次

  * どうやってPerlからGroongaを呼び出すの？
  * どうやってMySQLのデータをGroongaに同期するの？
  * 実際に使うにはどうすればいいの？

= 全文検索とは？

((*全*))ての((*文*))書から特定の文字列を\n((*検索*))する

= 全文検索とは？

例えば？

* Webページの検索(Google)
* ECサイトの検索(Amazon, 楽天, メルカリ etc...)
* grep

= Groongaとは？

* オープンソースの国産全文検索エンジン

= Groongaの特徴

* 爆速
* 登録した情報は即時検索可能
* 更新中でも検索性能が落ちない
* 毎月29日リリース

== MySQLで全文検索

よくあるアプローチ

== MySQLで全文検索

1. デフォルトの全文検索機能を使う
2. ElasticSearchと連携

== デフォルトの全文検索機能を使う

* ((*遅い*))

== ElasticSearchと連携

* MySQLデータとElasticsearchの両方のデータをケアしないといけない
* Elasticsearchが起動していないとデータの更新ができない

== Groongaを使うと

((*爆速*))

== どのくらい速いの？

ベンチマーク

== Groongaを使うと

MySQLのデータだけケアすればいい

Groongaが起動していなくてもデータの更新ができる

== どうやってMySQLのデータをGroongaで検索するの？

構成図

== MySQLのレプリケーションモデル

構成図

== Groonga-HTTPの仕組み

構成図

== MySQL+Groongaの速度

ベンチマーク

== MySQL+Groongaのデータ管理

MySQLのレプリケーションと同じ

== MySQL+Groongaのデータ管理

障害時は検索はできないが更新はできる

== MySQL+Groongaのデータ管理

障害発生中の更新はあとから同期できる
特別のケアはいらない

== groonga-deltaの使い方

ドキュメントを参照

== Groonga-HTTPの使い方

ドキュメントを参照

== Mroongaとの違い

MySQLのストレージエンジンとしてGroongaを使える

== Mroongaのメリット

* SQLが使える
* 使うまでの設定がない（パッケージをインストールして終わり）

== Mroongaのデメリット

* MySQL+Groongaに比べて遅い
* Groongaの一部の機能を使えない

== ユースケース

気軽に高速な全文検索を使いたい

== ユースケース

Mroonga

== ユースケース

とにかく速度がほしい

== ユースケース

ファセット検索などGroongaにしかない機能を使いたい

== ユースケース

MySQL + Groonga

== Groongaについての情報

リリース自慢会
https://www.youtube.com/playlist?list=PLLwHraQ4jf7PnA3GjI9v90DZq8ikLk0iN

== Groongaについての情報

グルカイ！（Groonga開発者に聞け！）
https://www.youtube.com/playlist?list=PLLwHraQ4jf7PBol9aq5BoaM2Hnk6aCKs2

== サポート

MySQL + Groongaは敷居が高いが使いたい

== サポート

クリアコードのサポートサービス

https://www.clear-code.com/services/groonga.html

== サポート

チャット

https://gitter.im/groonga/ja

== サポート

GitHub Discussions

https://github.com/groonga/groonga/discussions
